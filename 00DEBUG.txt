   $ export MPICH_SRC=/home/xxx/work/mpich-tofu/
0) mpich-tofu
   $ cd $MPICH_SRC
   $ git pull
1) utf
   # export UTF_ARCH=fugaku or others
   $ cd $MPICH_SRC/utf
   $ git pull
   $ git checkout debug0
   $ (cd src; make; make install)
   $ (cd src/mpi_vbg; make; make install)
2) libfabric
   $ cd $MPICH_SRC/mpich/module/libfabric
   $ git pull
   $ cd $MPICH_SRC
   $ (cd mpich; date; make -j 8 V=1 >../log/cmp-mpich-gcc.txt 2>&1; date)
   $ (cd mpich; make V=1 install > ../log/inst-mpich-gcc.txt 2>&1; date)

3) MPICH environment setting
  (1) Tagged
	export MPICH_HOME=$HOME/mpich-tofu/
	export PATH=$PATH:$MPICH_HOME/bin:$PATH
  	export MPIR_CVAR_CH4_OFI_CAPABILITY_SETS_DEBUG=1
	export MPICH_TOFU_SHOW_PARAMS=1
	export UTF_INFO=1
	export UTF_TOFU_SHOW_RCOUNT=1  ## Show reload count
	##
	export UTF_TRANSMODE=0	# Chained
	export UTF_MSGMODE=0	### NEEDS FOR TAGGED
	export MPIR_CVAR_CH4_OFI_ENABLE_TAGGED=1
	export UTOFU_SWAP_PROTECT=1
  (2) AM
	export MPICH_HOME=$HOME/mpich-tofu/
	export PATH=$PATH:$MPICH_HOME/bin:$PATH
	export MPIR_CVAR_CH4_OFI_CAPABILITY_SETS_DEBUG=1
	export MPICH_TOFU_SHOW_PARAMS=1
	export UTF_TOFU_SHOW_RCOUNT=1
	export UTF_INFO=1
	##
	export UTF_TRANSMODE=0	# Chained
	export UTF_MSGMODE=1	# Rendezous
	export UTOFU_SWAP_PROTECT=1
===========================================================================================
	- UTF test_p2p
	  utf/test/base/{test_p2p,run-wisteria-test_p2p-2.sh}
	- UTF binaries
	  utf/build/{libutf.so,libmpi_vbg.so}
	- MPICH test
	  mpich-test/mpich-org/{*.sh, *.txt, Makefile}
===========================================================================================
	/opt/FJSVxos/devkit/aarch64/rfs/usr/include/utofu.h
===========================================================================================
$ cd ~/work/mpich-tofu-org/mpich-test/mpich-org
$ make mpich-copy
$ make copy
$ cd ~/work/mpich-tofu-org/utf/mpitest/wisteria-run
$ make copy
$ cd ~/work/mpi-benchmarks
$ cp IMB-MPI1 /data/01/pz0485/z30485/work/bin-org/
$ cp IMB-MPI1 /data/01/pz0485/z30485/work/bin-org/IMB-MPI1-NOCHK
$ cp IMB-MPI1 /data/01/pz0485/z30485/work/bin-org/FJ-IMB-MPI1
$ cp IMB-MPI1 /data/01/pz0485/z30485/work/bin-org/FJ-IMB-MPI1-NOCHK

1) tools of mpich-tofu
 $ mkdir ~/work
 $ cd ~/work
 $ git clone git@github.com:yutaka-ishikawa/mpich-tofu
2) utf
 $ cd ~/work/mpich-tofu
 $ cd utf
 ####$ git checkout fast
 $ git checkout debug0
3) mpich
 $ cd ~/work/mpich-tofu
 $ git clone --recursive https://github.com/pmodels/mpich.git
   # izem module is missing
   # cd mpich/modules
   # git clone https://github.com/pmodels/izem
 $ cd mpich
 $ git checkout 169740255305011686c1781e3554f83eea448212
 $ cd modules/json-c
 $ git checkout 366f1c6c0ea2ca2f1077c1296f5cb744336fac38
 $ cd ../yaksa
 $ git checkout 110f306ac5fc63af3a5d21ed63a70e053a4c483a
4) libfabric
 $ cd ~/work/mpich-tofu/mpich-modules
 $ rm -rf libfabric
### $ git clone https://github.com/yutaka-ishikawa/libfabric.git
 $ git clone git@github.com:yutaka-ishikawa/libfabric.git
 $ cd libfabric/prov/tofu/src
 $ git checkout fast
 $ ln -s ../../../../../../utf .

---------------------------------------------------------------
 1) utf
   # export UTF_ARCH=fugaku		for single thread compiled by cross gcc
   # export UTF_ARCH=fugaku-mt		for multiple thread compiled by cross gcc
   # export UTF_ARCH=fugaku-native	for single thread compiled by Fujitsu fcc on compute node
   # export UTF_ARCH=fugaku-native-mt	for multiple thread compiled by Fujitsu fcc on compute node
   $ cd ~/work/mpich-tofu/utf/src
   $ export UTF_ARCH=fugaku
   $ make
   $ make install
 2) mpich
   $ cd ~/work/mpich-tofu/mpich
   $ patch -p1 < ../tool/diff/MPICH-UTF.patch
      ### $ patch -p1 < ../tool/diff/MPICH-FC.patch
   $ patch -p1 < ../tool/diff/MPICH3.4-UTF-FCCONF.patch
   $ cd ..
   $ ./tool/mpich-autogen
     # check if the autogen has successfuly finished:
	  the log is log/gen-mpi.txt
   $ ./tool/mpich3.4-gcc-configure
   $ mv mpich/src/util/mpir_cvars.c mpich/src/util/mpir_cvars.c.org
   $ cp tool/diff/utf-mpir_cvars.c mpich/src/util/mpir_cvars.c
   $ (cd mpich; date; make -j 8 V=1 >../log/cmp-mpich-gcc.txt 2>&1; date)
     # check if the compilation has successfuly finished:
	  the log is log/cmp-mpich-gcc.txt
   $ (cd mpich; make V=1 install > ../log/inst-mpich-gcc.txt 2>&1; date)

3) mpich execution wrapper and VBG
   # export UTF_ARCH=fugaku or others
   $ cd ~/work/mpich-tofu/utf/src/mpi_vbg
   $ make
   $ make install

(3) Runtime Environment
   $ export MPICH_HOME=$HOME/mpich-tofu/
   $ export PATH=$PATH:$MPICH_HOME/bin:$PATH
